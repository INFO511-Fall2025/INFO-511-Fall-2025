{
  "hash": "0abb17a3adb352fd0ec85dd7370093dc",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'AE 16: Principal component analysis'\nsubtitle: Suggested answers\ncategories:\n  - Application exercise\n  - Answers\nexecute:\n  warning: false\n  error: false\n---\n\nIn this application exercise, we will:\n\n1.  Learn about Principal Component Analysis.\n\n2.  Load the Penguins Dataset: Import and explore the dataset to understand its structure and the features available for analysis.\n\n3.  Preprocess the Data: Clean the data by handling missing values and standardize the numerical features for PCA.\n\n4.  Perform PCA: Apply Principal Component Analysis to reduce the dimensionality of the data and extract the principal components.\n\n5.  Visualize the PCA Result: Create a scatter plot of the principal components to visualize the clustering of different penguin species.\n\n# Learn about PCA\n\n## Exercise 1\n\nWatch this video on Principal Component Analysis:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FD4DeN81ODY?si=ZKBrlIsgMy-F9oq6\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen>\n\n</iframe>\n\n-   What were three takeaways from this video? Include how you think linear algebra contributes to PCA:\n\nAnswer will vary.\n\n# PCA in Python\n\n## Packages\n\nWe will primarily use the `seaborn` and `sklearn` packages.\n\n::: {#0c7a91ff .cell execution_count=1}\n``` {.python .cell-code}\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n## Exercise 2\n\n**Load the Penguins Dataset using `seaborn`**\n\n::: {#6805f2c8 .cell execution_count=2}\n``` {.python .cell-code}\nimport seaborn as sns\nimport pandas as pd\n\npenguins = sns.load_dataset('penguins')\n\nprint(penguins.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  species     island  bill_length_mm  bill_depth_mm  flipper_length_mm  \\\n0  Adelie  Torgersen            39.1           18.7              181.0   \n1  Adelie  Torgersen            39.5           17.4              186.0   \n2  Adelie  Torgersen            40.3           18.0              195.0   \n3  Adelie  Torgersen             NaN            NaN                NaN   \n4  Adelie  Torgersen            36.7           19.3              193.0   \n\n   body_mass_g     sex  \n0       3750.0    Male  \n1       3800.0  Female  \n2       3250.0  Female  \n3          NaN     NaN  \n4       3450.0  Female  \n```\n:::\n:::\n\n\n## Exercise 3\n\n**Preprocess the data**\n\nWe need to handle missing values and select the numerical features for PCA.\n\n::: {#18da6b21 .cell execution_count=3}\n``` {.python .cell-code}\npenguins.dropna(inplace=True)\n\nfeatures = ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']\nX = penguins[features]\n\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\n```\n:::\n\n\n## Exercise 4\n\n**Perform PCA**\n\nUse `PCA` from `sklearn` to reduce the dimensionality of the data.\n**Hint**: use two principal components\n\n::: {#945e2d51 .cell execution_count=4}\n``` {.python .cell-code}\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=2)\n\nprincipal_components = pca.fit_transform(X_scaled)\n\npca_df = pd.DataFrame(data=principal_components, columns=['PC1', 'PC2'])\n\npca_df['species'] = penguins['species']\n```\n:::\n\n\n## Exercise 5\n\n**Visualize the PCA Result**\n\nUse `seaborn` to visualize the principal components.\n\n::: {#432cc5d4 .cell execution_count=5}\n``` {.python .cell-code}\nplt.figure(figsize=(8, 6))\nsns.scatterplot(data=pca_df, x='PC1', y='PC2', hue='species', palette='colorblind')\nplt.title('PCA of Penguins Dataset')\nplt.xlabel('Principal Component 1')\nplt.ylabel('Principal Component 2')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-16-pca-A_files/figure-html/cell-6-output-1.png){width=662 height=523}\n:::\n:::\n\n\n",
    "supporting": [
      "ae-16-pca-A_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}