{
  "hash": "343ae465ba5eac50894cdda3ac342edd",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Data preprocessing\nsubtitle: Lecture 6\nformat:\n  revealjs: default\neditor_options:\n  chunk_output_type: console\nexecute:\n  warning: false\n  error: false\n---\n\n## Setup\n\n::: {#setup .cell execution_count=1}\n``` {.python .cell-code}\n# Import all required libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler, MaxAbsScaler, MinMaxScaler\nfrom sklearn.impute import SimpleImputer\nimport statsmodels.api as sm\nimport scipy.stats as stats\n\n# Increase font size of all Seaborn plot elements\nsns.set(font_scale = 1.25)\n\n# Set Seaborn theme\nsns.set_theme(style = \"whitegrid\")\n```\n:::\n\n\n# Data preprocessing\n\n## Data preprocessing\n\n> **Data preprocessing** refers to the manipulation, filtration, or augmentation of data before it is analyzed.\n> It is a crucial step in the data science process.\n\n::: fragment\nIt's essentially data cleaning.\n:::\n\n## Dataset {.smaller}\n\n\n\n**Human Freedom Index**\n\nThe Human Freedom Index is a report that attempts to summarize the idea of \"freedom\" through variables for many countries around the globe.\n\n::: {#8fa0ec8b .cell execution_count=3}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-4-output-1.png){width=692 height=307}\n:::\n:::\n\n\n## Question {.smaller}\n\nWhat trends are there within **human freedom indices** in different regions?\n\n![](images/human-freedom.jpg){fig-align=\"center\" width=\"1214\"}\n\n## Dataset: Human Freedom Index\n\n::: {#d89d4b7c .cell execution_count=4}\n``` {.python .cell-code}\nhfi = pd.read_csv(\"data/hfi.csv\")\nhfi.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>ISO_code</th>\n      <th>countries</th>\n      <th>region</th>\n      <th>pf_rol_procedural</th>\n      <th>pf_rol_civil</th>\n      <th>pf_rol_criminal</th>\n      <th>pf_rol</th>\n      <th>pf_ss_homicide</th>\n      <th>pf_ss_disappearances_disap</th>\n      <th>...</th>\n      <th>ef_regulation_business_bribes</th>\n      <th>ef_regulation_business_licensing</th>\n      <th>ef_regulation_business_compliance</th>\n      <th>ef_regulation_business</th>\n      <th>ef_regulation</th>\n      <th>ef_score</th>\n      <th>ef_rank</th>\n      <th>hf_score</th>\n      <th>hf_rank</th>\n      <th>hf_quartile</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2016</td>\n      <td>ALB</td>\n      <td>Albania</td>\n      <td>Eastern Europe</td>\n      <td>6.661503</td>\n      <td>4.547244</td>\n      <td>4.666508</td>\n      <td>5.291752</td>\n      <td>8.920429</td>\n      <td>10.0</td>\n      <td>...</td>\n      <td>4.050196</td>\n      <td>7.324582</td>\n      <td>7.074366</td>\n      <td>6.705863</td>\n      <td>6.906901</td>\n      <td>7.54</td>\n      <td>34.0</td>\n      <td>7.568140</td>\n      <td>48.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2016</td>\n      <td>DZA</td>\n      <td>Algeria</td>\n      <td>Middle East &amp; North Africa</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3.819566</td>\n      <td>9.456254</td>\n      <td>10.0</td>\n      <td>...</td>\n      <td>3.765515</td>\n      <td>8.523503</td>\n      <td>7.029528</td>\n      <td>5.676956</td>\n      <td>5.268992</td>\n      <td>4.99</td>\n      <td>159.0</td>\n      <td>5.135886</td>\n      <td>155.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2016</td>\n      <td>AGO</td>\n      <td>Angola</td>\n      <td>Sub-Saharan Africa</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3.451814</td>\n      <td>8.060260</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>1.945540</td>\n      <td>8.096776</td>\n      <td>6.782923</td>\n      <td>4.930271</td>\n      <td>5.518500</td>\n      <td>5.17</td>\n      <td>155.0</td>\n      <td>5.640662</td>\n      <td>142.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2016</td>\n      <td>ARG</td>\n      <td>Argentina</td>\n      <td>Latin America &amp; the Caribbean</td>\n      <td>7.098483</td>\n      <td>5.791960</td>\n      <td>4.343930</td>\n      <td>5.744791</td>\n      <td>7.622974</td>\n      <td>10.0</td>\n      <td>...</td>\n      <td>3.260044</td>\n      <td>5.253411</td>\n      <td>6.508295</td>\n      <td>5.535831</td>\n      <td>5.369019</td>\n      <td>4.84</td>\n      <td>160.0</td>\n      <td>6.469848</td>\n      <td>107.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2016</td>\n      <td>ARM</td>\n      <td>Armenia</td>\n      <td>Caucasus &amp; Central Asia</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.003205</td>\n      <td>8.808750</td>\n      <td>10.0</td>\n      <td>...</td>\n      <td>4.575152</td>\n      <td>9.319612</td>\n      <td>6.491481</td>\n      <td>6.797530</td>\n      <td>7.378069</td>\n      <td>7.57</td>\n      <td>29.0</td>\n      <td>7.241402</td>\n      <td>57.0</td>\n      <td>2.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 123 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Understanding the data {.smaller}\n\n::: panel-tabset\n## `.info()`\n\n::: {#ba74d17c .cell execution_count=5}\n``` {.python .cell-code}\nhfi.info(verbose = True)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1458 entries, 0 to 1457\nData columns (total 123 columns):\n #    Column                              Dtype  \n---   ------                              -----  \n 0    year                                int64  \n 1    ISO_code                            object \n 2    countries                           object \n 3    region                              object \n 4    pf_rol_procedural                   float64\n 5    pf_rol_civil                        float64\n 6    pf_rol_criminal                     float64\n 7    pf_rol                              float64\n 8    pf_ss_homicide                      float64\n 9    pf_ss_disappearances_disap          float64\n 10   pf_ss_disappearances_violent        float64\n 11   pf_ss_disappearances_organized      float64\n 12   pf_ss_disappearances_fatalities     float64\n 13   pf_ss_disappearances_injuries       float64\n 14   pf_ss_disappearances                float64\n 15   pf_ss_women_fgm                     float64\n 16   pf_ss_women_missing                 float64\n 17   pf_ss_women_inheritance_widows      float64\n 18   pf_ss_women_inheritance_daughters   float64\n 19   pf_ss_women_inheritance             float64\n 20   pf_ss_women                         float64\n 21   pf_ss                               float64\n 22   pf_movement_domestic                float64\n 23   pf_movement_foreign                 float64\n 24   pf_movement_women                   float64\n 25   pf_movement                         float64\n 26   pf_religion_estop_establish         float64\n 27   pf_religion_estop_operate           float64\n 28   pf_religion_estop                   float64\n 29   pf_religion_harassment              float64\n 30   pf_religion_restrictions            float64\n 31   pf_religion                         float64\n 32   pf_association_association          float64\n 33   pf_association_assembly             float64\n 34   pf_association_political_establish  float64\n 35   pf_association_political_operate    float64\n 36   pf_association_political            float64\n 37   pf_association_prof_establish       float64\n 38   pf_association_prof_operate         float64\n 39   pf_association_prof                 float64\n 40   pf_association_sport_establish      float64\n 41   pf_association_sport_operate        float64\n 42   pf_association_sport                float64\n 43   pf_association                      float64\n 44   pf_expression_killed                float64\n 45   pf_expression_jailed                float64\n 46   pf_expression_influence             float64\n 47   pf_expression_control               float64\n 48   pf_expression_cable                 float64\n 49   pf_expression_newspapers            float64\n 50   pf_expression_internet              float64\n 51   pf_expression                       float64\n 52   pf_identity_legal                   float64\n 53   pf_identity_parental_marriage       float64\n 54   pf_identity_parental_divorce        float64\n 55   pf_identity_parental                float64\n 56   pf_identity_sex_male                float64\n 57   pf_identity_sex_female              float64\n 58   pf_identity_sex                     float64\n 59   pf_identity_divorce                 float64\n 60   pf_identity                         float64\n 61   pf_score                            float64\n 62   pf_rank                             float64\n 63   ef_government_consumption           float64\n 64   ef_government_transfers             float64\n 65   ef_government_enterprises           float64\n 66   ef_government_tax_income            float64\n 67   ef_government_tax_payroll           float64\n 68   ef_government_tax                   float64\n 69   ef_government                       float64\n 70   ef_legal_judicial                   float64\n 71   ef_legal_courts                     float64\n 72   ef_legal_protection                 float64\n 73   ef_legal_military                   float64\n 74   ef_legal_integrity                  float64\n 75   ef_legal_enforcement                float64\n 76   ef_legal_restrictions               float64\n 77   ef_legal_police                     float64\n 78   ef_legal_crime                      float64\n 79   ef_legal_gender                     float64\n 80   ef_legal                            float64\n 81   ef_money_growth                     float64\n 82   ef_money_sd                         float64\n 83   ef_money_inflation                  float64\n 84   ef_money_currency                   float64\n 85   ef_money                            float64\n 86   ef_trade_tariffs_revenue            float64\n 87   ef_trade_tariffs_mean               float64\n 88   ef_trade_tariffs_sd                 float64\n 89   ef_trade_tariffs                    float64\n 90   ef_trade_regulatory_nontariff       float64\n 91   ef_trade_regulatory_compliance      float64\n 92   ef_trade_regulatory                 float64\n 93   ef_trade_black                      float64\n 94   ef_trade_movement_foreign           float64\n 95   ef_trade_movement_capital           float64\n 96   ef_trade_movement_visit             float64\n 97   ef_trade_movement                   float64\n 98   ef_trade                            float64\n 99   ef_regulation_credit_ownership      float64\n 100  ef_regulation_credit_private        float64\n 101  ef_regulation_credit_interest       float64\n 102  ef_regulation_credit                float64\n 103  ef_regulation_labor_minwage         float64\n 104  ef_regulation_labor_firing          float64\n 105  ef_regulation_labor_bargain         float64\n 106  ef_regulation_labor_hours           float64\n 107  ef_regulation_labor_dismissal       float64\n 108  ef_regulation_labor_conscription    float64\n 109  ef_regulation_labor                 float64\n 110  ef_regulation_business_adm          float64\n 111  ef_regulation_business_bureaucracy  float64\n 112  ef_regulation_business_start        float64\n 113  ef_regulation_business_bribes       float64\n 114  ef_regulation_business_licensing    float64\n 115  ef_regulation_business_compliance   float64\n 116  ef_regulation_business              float64\n 117  ef_regulation                       float64\n 118  ef_score                            float64\n 119  ef_rank                             float64\n 120  hf_score                            float64\n 121  hf_rank                             float64\n 122  hf_quartile                         float64\ndtypes: float64(119), int64(1), object(3)\nmemory usage: 1.4+ MB\n```\n:::\n:::\n\n\n## `.describe()`\n\n::: {#4fde7e3f .cell execution_count=6}\n``` {.python .cell-code}\nhfi.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>pf_rol_procedural</th>\n      <th>pf_rol_civil</th>\n      <th>pf_rol_criminal</th>\n      <th>pf_rol</th>\n      <th>pf_ss_homicide</th>\n      <th>pf_ss_disappearances_disap</th>\n      <th>pf_ss_disappearances_violent</th>\n      <th>pf_ss_disappearances_organized</th>\n      <th>pf_ss_disappearances_fatalities</th>\n      <th>...</th>\n      <th>ef_regulation_business_bribes</th>\n      <th>ef_regulation_business_licensing</th>\n      <th>ef_regulation_business_compliance</th>\n      <th>ef_regulation_business</th>\n      <th>ef_regulation</th>\n      <th>ef_score</th>\n      <th>ef_rank</th>\n      <th>hf_score</th>\n      <th>hf_rank</th>\n      <th>hf_quartile</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1458.000000</td>\n      <td>880.000000</td>\n      <td>880.000000</td>\n      <td>880.000000</td>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n      <td>1369.000000</td>\n      <td>1378.000000</td>\n      <td>1279.000000</td>\n      <td>1378.000000</td>\n      <td>...</td>\n      <td>1283.000000</td>\n      <td>1357.000000</td>\n      <td>1368.000000</td>\n      <td>1374.000000</td>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2012.000000</td>\n      <td>5.589355</td>\n      <td>5.474770</td>\n      <td>5.044070</td>\n      <td>5.309641</td>\n      <td>7.412980</td>\n      <td>8.341855</td>\n      <td>9.519458</td>\n      <td>6.772869</td>\n      <td>9.584972</td>\n      <td>...</td>\n      <td>4.886192</td>\n      <td>7.698494</td>\n      <td>6.981858</td>\n      <td>6.317668</td>\n      <td>7.019782</td>\n      <td>6.785610</td>\n      <td>76.973149</td>\n      <td>6.993444</td>\n      <td>77.007983</td>\n      <td>2.490566</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2.582875</td>\n      <td>2.080957</td>\n      <td>1.428494</td>\n      <td>1.724886</td>\n      <td>1.529310</td>\n      <td>2.832947</td>\n      <td>3.225902</td>\n      <td>1.744673</td>\n      <td>2.768983</td>\n      <td>1.559826</td>\n      <td>...</td>\n      <td>1.889168</td>\n      <td>1.728507</td>\n      <td>1.979200</td>\n      <td>1.230988</td>\n      <td>1.027625</td>\n      <td>0.883601</td>\n      <td>44.540142</td>\n      <td>1.025811</td>\n      <td>44.506549</td>\n      <td>1.119698</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>2008.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>2.009841</td>\n      <td>2.483540</td>\n      <td>2.880000</td>\n      <td>1.000000</td>\n      <td>3.765827</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2010.000000</td>\n      <td>4.133333</td>\n      <td>4.549550</td>\n      <td>3.789724</td>\n      <td>4.131746</td>\n      <td>6.386978</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>5.000000</td>\n      <td>9.942607</td>\n      <td>...</td>\n      <td>3.433786</td>\n      <td>6.874687</td>\n      <td>6.368178</td>\n      <td>5.591851</td>\n      <td>6.429498</td>\n      <td>6.250000</td>\n      <td>38.000000</td>\n      <td>6.336685</td>\n      <td>39.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2012.000000</td>\n      <td>5.300000</td>\n      <td>5.300000</td>\n      <td>4.575189</td>\n      <td>4.910797</td>\n      <td>8.638278</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>7.500000</td>\n      <td>10.000000</td>\n      <td>...</td>\n      <td>4.418371</td>\n      <td>8.074161</td>\n      <td>7.466692</td>\n      <td>6.265234</td>\n      <td>7.082075</td>\n      <td>6.900000</td>\n      <td>77.000000</td>\n      <td>6.923840</td>\n      <td>76.000000</td>\n      <td>2.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2014.000000</td>\n      <td>7.389499</td>\n      <td>6.410975</td>\n      <td>6.400000</td>\n      <td>6.513178</td>\n      <td>9.454402</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>...</td>\n      <td>6.227978</td>\n      <td>8.991882</td>\n      <td>8.209310</td>\n      <td>7.139718</td>\n      <td>7.720955</td>\n      <td>7.410000</td>\n      <td>115.000000</td>\n      <td>7.894660</td>\n      <td>115.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2016.000000</td>\n      <td>9.700000</td>\n      <td>8.773533</td>\n      <td>8.719848</td>\n      <td>8.723094</td>\n      <td>9.926568</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>...</td>\n      <td>9.623811</td>\n      <td>9.999638</td>\n      <td>9.865488</td>\n      <td>9.272600</td>\n      <td>9.439828</td>\n      <td>9.190000</td>\n      <td>162.000000</td>\n      <td>9.126313</td>\n      <td>162.000000</td>\n      <td>4.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows Ã— 120 columns</p>\n</div>\n```\n:::\n:::\n\n\n:::\n\n## Identifying missing values\n\n::: {#760dacda .cell execution_count=7}\n``` {.python .cell-code}\nhfi.isna().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nyear                   0\nISO_code               0\ncountries              0\nregion                 0\npf_rol_procedural    578\n                    ... \nef_score              80\nef_rank               80\nhf_score              80\nhf_rank               80\nhf_quartile           80\nLength: 123, dtype: int64\n```\n:::\n:::\n\n\n::: fragment\n> A lot of missing values ðŸ™ƒ\n:::\n\n# Data cleaning\n\n## Handling missing data\n\n**Options**\n\n::: incremental\n-   Do nothing...\n\n-   Remove them\n\n-   **Imputate**\n:::\n\n::: fragment\nWe will use the `hf_score` from `hfi`: 80 missing values\n:::\n\n## Imputation\n\n> In statistics, **imputation** is the process of replacing missing data with substituted values.\n\n::: incremental\n-   Mean imputation\n\n-   Median imputation\n\n-   Mode imputation\n\n-   [Several other methods](https://datamineaz.org/tables/model-cheatsheet.html)\n:::\n\n## Mean imputation {.smaller}\n\n::: panel-tabset\n## Definition\n\n**How it Works**: Replace missing values with the arithmetic **mean** of the non-missing values in the same variable.\n\n::: fragment\n**Pros**:\n\n::: incremental\n-   Easy and fast.\n-   Works well with small numerical datasets\n:::\n\n**Cons**:\n\n::: incremental\n-   It only works on the column level.\n-   Will give poor results on encoded categorical features.\n-   Not very accurate.\n-   Doesn't account for the uncertainty in the imputations.\n:::\n:::\n\n## Visual\n\n::: {#98b1ebf7 .cell fig.asp='0.625' execution_count=8}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-9-output-1.png){width=816 height=438}\n:::\n:::\n\n\n## Code\n\n::: {#87ce3639 .cell execution_count=9}\n``` {.python .cell-code code-line-numbers=\"|1|3,4|6,7\"}\nhfi_copy = hfi.copy()\n\nmean_imputer = SimpleImputer(strategy = 'mean')\nhfi_copy['mean_hf_score'] = mean_imputer.fit_transform(hfi_copy[['hf_score']])\n\nmean_plot = sns.kdeplot(data = hfi_copy, x = 'hf_score', linewidth = 2, label = \"Original\")\nmean_plot = sns.kdeplot(data = hfi_copy, x = 'mean_hf_score', linewidth = 2, label = \"Mean Imputed\")\n\nplt.legend()\nplt.show()\n```\n:::\n\n\n:::\n\n## Median imputation {.smaller}\n\n::: panel-tabset\n## Definition\n\n**How it Works**: Replace missing values with the arithmetic **median** of the non-missing values in the same variable.\n\n::: fragment\n**Pros** (same as mean):\n\n::: incremental\n-   Easy and fast.\n-   Works well with small numerical datasets\n:::\n\n**Cons** (same as mean):\n\n::: incremental\n-   It only works on the column level.\n-   Will give poor results on encoded categorical features.\n-   Not very accurate.\n-   Doesn't account for the uncertainty in the imputations.\n:::\n:::\n\n## Visual\n\n::: {#2261377c .cell fig.asp='0.625' execution_count=10}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-11-output-1.png){width=816 height=435}\n:::\n:::\n\n\n## Code\n\n::: {#ca6478fa .cell execution_count=11}\n``` {.python .cell-code code-line-numbers=\"|1|3,4|6,7\"}\nhfi_copy = hfi.copy()\n\nmedian_imputer = SimpleImputer(strategy = 'median')\nhfi_copy['median_hf_score'] = median_imputer.fit_transform(hfi_copy[['hf_score']])\n\nmedian_plot = sns.kdeplot(data = hfi_copy, x = 'hf_score', linewidth = 2, label = \"Original\")\nmedian_plot = sns.kdeplot(data = hfi_copy, x = 'median_hf_score', linewidth = 2, label = \"Median Imputed\")\n\nplt.legend()\nplt.show()\n```\n:::\n\n\n:::\n\n## Mode imputation {.smaller}\n\n::: panel-tabset\n## Definition\n\n**How it Works**: Replace missing values with the **mode** of the non-missing values in the same variable.\n\n::: fragment\n**Pros**\n\n::: incremental\n-   Easy and fast.\n-   Works well with categorical features.\n:::\n\n**Cons**:\n\n::: incremental\n-   Doesn't factor the correlations between features.\n-   Can introduce bias in the data.\n:::\n:::\n\n## Visual\n\n::: {#49ad6448 .cell fig.asp='0.625' execution_count=12}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-13-output-1.png){width=824 height=435}\n:::\n:::\n\n\n## Code\n\n::: {#afa74715 .cell execution_count=13}\n``` {.python .cell-code code-line-numbers=\"|1|3,4|6,7\"}\nhfi_copy = hfi.copy()\n\nmode_imputer = SimpleImputer(strategy = 'most_frequent')\nhfi_copy['mode_hf_score'] = mode_imputer.fit_transform(hfi_copy[['hf_score']])\n\nmode_plot = sns.kdeplot(data = hfi_copy, x = 'hf_score', linewidth = 2, label = \"Original\")\nmode_plot = sns.kdeplot(data = hfi_copy, x = 'mode_hf_score', linewidth = 2, label = \"Mode Imputated\")\n\nplt.legend()\n\nplt.show()\n```\n:::\n\n\n:::\n\n# Data type conversion\n\n## Logical operators {.smaller}\n\n| operator | definition                   |\n|:---------|:-----------------------------|\n| `<`      | is less than?                |\n| `<=`     | is less than or equal to?    |\n| `>`      | is greater than?             |\n| `>=`     | is greater than or equal to? |\n| `==`     | is exactly equal to?         |\n| `!=`     | is not equal to?             |\n\n## Logical operators cont. {.smaller}\n\n| operator        | definition                                               |\n|:---------------------|:-------------------------------------------------|\n| `x and y`       | is x AND y?                                              |\n| `x or y`        | is x OR y?                                               |\n| `x is None`     | is x None?                                               |\n| `x is not None` | is x not None?                                           |\n| `x in y`        | is x in y?                                               |\n| `x not in y`    | is x not in y?                                           |\n| `not x`         | is not x? (only makes sense if `x` is `True` or `False`) |\n\n## Looking at our data {.smaller}\n\n::: {#a72c540d .cell execution_count=14}\n``` {.python .cell-code}\nhfi_copy = hfi\nhfi_copy.info(verbose=True)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1458 entries, 0 to 1457\nData columns (total 126 columns):\n #    Column                              Dtype  \n---   ------                              -----  \n 0    year                                int64  \n 1    ISO_code                            object \n 2    countries                           object \n 3    region                              object \n 4    pf_rol_procedural                   float64\n 5    pf_rol_civil                        float64\n 6    pf_rol_criminal                     float64\n 7    pf_rol                              float64\n 8    pf_ss_homicide                      float64\n 9    pf_ss_disappearances_disap          float64\n 10   pf_ss_disappearances_violent        float64\n 11   pf_ss_disappearances_organized      float64\n 12   pf_ss_disappearances_fatalities     float64\n 13   pf_ss_disappearances_injuries       float64\n 14   pf_ss_disappearances                float64\n 15   pf_ss_women_fgm                     float64\n 16   pf_ss_women_missing                 float64\n 17   pf_ss_women_inheritance_widows      float64\n 18   pf_ss_women_inheritance_daughters   float64\n 19   pf_ss_women_inheritance             float64\n 20   pf_ss_women                         float64\n 21   pf_ss                               float64\n 22   pf_movement_domestic                float64\n 23   pf_movement_foreign                 float64\n 24   pf_movement_women                   float64\n 25   pf_movement                         float64\n 26   pf_religion_estop_establish         float64\n 27   pf_religion_estop_operate           float64\n 28   pf_religion_estop                   float64\n 29   pf_religion_harassment              float64\n 30   pf_religion_restrictions            float64\n 31   pf_religion                         float64\n 32   pf_association_association          float64\n 33   pf_association_assembly             float64\n 34   pf_association_political_establish  float64\n 35   pf_association_political_operate    float64\n 36   pf_association_political            float64\n 37   pf_association_prof_establish       float64\n 38   pf_association_prof_operate         float64\n 39   pf_association_prof                 float64\n 40   pf_association_sport_establish      float64\n 41   pf_association_sport_operate        float64\n 42   pf_association_sport                float64\n 43   pf_association                      float64\n 44   pf_expression_killed                float64\n 45   pf_expression_jailed                float64\n 46   pf_expression_influence             float64\n 47   pf_expression_control               float64\n 48   pf_expression_cable                 float64\n 49   pf_expression_newspapers            float64\n 50   pf_expression_internet              float64\n 51   pf_expression                       float64\n 52   pf_identity_legal                   float64\n 53   pf_identity_parental_marriage       float64\n 54   pf_identity_parental_divorce        float64\n 55   pf_identity_parental                float64\n 56   pf_identity_sex_male                float64\n 57   pf_identity_sex_female              float64\n 58   pf_identity_sex                     float64\n 59   pf_identity_divorce                 float64\n 60   pf_identity                         float64\n 61   pf_score                            float64\n 62   pf_rank                             float64\n 63   ef_government_consumption           float64\n 64   ef_government_transfers             float64\n 65   ef_government_enterprises           float64\n 66   ef_government_tax_income            float64\n 67   ef_government_tax_payroll           float64\n 68   ef_government_tax                   float64\n 69   ef_government                       float64\n 70   ef_legal_judicial                   float64\n 71   ef_legal_courts                     float64\n 72   ef_legal_protection                 float64\n 73   ef_legal_military                   float64\n 74   ef_legal_integrity                  float64\n 75   ef_legal_enforcement                float64\n 76   ef_legal_restrictions               float64\n 77   ef_legal_police                     float64\n 78   ef_legal_crime                      float64\n 79   ef_legal_gender                     float64\n 80   ef_legal                            float64\n 81   ef_money_growth                     float64\n 82   ef_money_sd                         float64\n 83   ef_money_inflation                  float64\n 84   ef_money_currency                   float64\n 85   ef_money                            float64\n 86   ef_trade_tariffs_revenue            float64\n 87   ef_trade_tariffs_mean               float64\n 88   ef_trade_tariffs_sd                 float64\n 89   ef_trade_tariffs                    float64\n 90   ef_trade_regulatory_nontariff       float64\n 91   ef_trade_regulatory_compliance      float64\n 92   ef_trade_regulatory                 float64\n 93   ef_trade_black                      float64\n 94   ef_trade_movement_foreign           float64\n 95   ef_trade_movement_capital           float64\n 96   ef_trade_movement_visit             float64\n 97   ef_trade_movement                   float64\n 98   ef_trade                            float64\n 99   ef_regulation_credit_ownership      float64\n 100  ef_regulation_credit_private        float64\n 101  ef_regulation_credit_interest       float64\n 102  ef_regulation_credit                float64\n 103  ef_regulation_labor_minwage         float64\n 104  ef_regulation_labor_firing          float64\n 105  ef_regulation_labor_bargain         float64\n 106  ef_regulation_labor_hours           float64\n 107  ef_regulation_labor_dismissal       float64\n 108  ef_regulation_labor_conscription    float64\n 109  ef_regulation_labor                 float64\n 110  ef_regulation_business_adm          float64\n 111  ef_regulation_business_bureaucracy  float64\n 112  ef_regulation_business_start        float64\n 113  ef_regulation_business_bribes       float64\n 114  ef_regulation_business_licensing    float64\n 115  ef_regulation_business_compliance   float64\n 116  ef_regulation_business              float64\n 117  ef_regulation                       float64\n 118  ef_score                            float64\n 119  ef_rank                             float64\n 120  hf_score                            float64\n 121  hf_rank                             float64\n 122  hf_quartile                         float64\n 123  mean_hf_score                       float64\n 124  median_hf_score                     float64\n 125  mode_hf_score                       float64\ndtypes: float64(122), int64(1), object(3)\nmemory usage: 1.4+ MB\n```\n:::\n:::\n\n\n## Converting `year` to `Datetime` {.smaller}\n\n::: {#8aff77f2 .cell execution_count=15}\n``` {.python .cell-code}\nhfi_copy['year'] = pd.to_datetime(hfi_copy['year'], format='%Y')\nprint(hfi_copy.info(verbose=True))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1458 entries, 0 to 1457\nData columns (total 126 columns):\n #    Column                              Dtype         \n---   ------                              -----         \n 0    year                                datetime64[ns]\n 1    ISO_code                            object        \n 2    countries                           object        \n 3    region                              object        \n 4    pf_rol_procedural                   float64       \n 5    pf_rol_civil                        float64       \n 6    pf_rol_criminal                     float64       \n 7    pf_rol                              float64       \n 8    pf_ss_homicide                      float64       \n 9    pf_ss_disappearances_disap          float64       \n 10   pf_ss_disappearances_violent        float64       \n 11   pf_ss_disappearances_organized      float64       \n 12   pf_ss_disappearances_fatalities     float64       \n 13   pf_ss_disappearances_injuries       float64       \n 14   pf_ss_disappearances                float64       \n 15   pf_ss_women_fgm                     float64       \n 16   pf_ss_women_missing                 float64       \n 17   pf_ss_women_inheritance_widows      float64       \n 18   pf_ss_women_inheritance_daughters   float64       \n 19   pf_ss_women_inheritance             float64       \n 20   pf_ss_women                         float64       \n 21   pf_ss                               float64       \n 22   pf_movement_domestic                float64       \n 23   pf_movement_foreign                 float64       \n 24   pf_movement_women                   float64       \n 25   pf_movement                         float64       \n 26   pf_religion_estop_establish         float64       \n 27   pf_religion_estop_operate           float64       \n 28   pf_religion_estop                   float64       \n 29   pf_religion_harassment              float64       \n 30   pf_religion_restrictions            float64       \n 31   pf_religion                         float64       \n 32   pf_association_association          float64       \n 33   pf_association_assembly             float64       \n 34   pf_association_political_establish  float64       \n 35   pf_association_political_operate    float64       \n 36   pf_association_political            float64       \n 37   pf_association_prof_establish       float64       \n 38   pf_association_prof_operate         float64       \n 39   pf_association_prof                 float64       \n 40   pf_association_sport_establish      float64       \n 41   pf_association_sport_operate        float64       \n 42   pf_association_sport                float64       \n 43   pf_association                      float64       \n 44   pf_expression_killed                float64       \n 45   pf_expression_jailed                float64       \n 46   pf_expression_influence             float64       \n 47   pf_expression_control               float64       \n 48   pf_expression_cable                 float64       \n 49   pf_expression_newspapers            float64       \n 50   pf_expression_internet              float64       \n 51   pf_expression                       float64       \n 52   pf_identity_legal                   float64       \n 53   pf_identity_parental_marriage       float64       \n 54   pf_identity_parental_divorce        float64       \n 55   pf_identity_parental                float64       \n 56   pf_identity_sex_male                float64       \n 57   pf_identity_sex_female              float64       \n 58   pf_identity_sex                     float64       \n 59   pf_identity_divorce                 float64       \n 60   pf_identity                         float64       \n 61   pf_score                            float64       \n 62   pf_rank                             float64       \n 63   ef_government_consumption           float64       \n 64   ef_government_transfers             float64       \n 65   ef_government_enterprises           float64       \n 66   ef_government_tax_income            float64       \n 67   ef_government_tax_payroll           float64       \n 68   ef_government_tax                   float64       \n 69   ef_government                       float64       \n 70   ef_legal_judicial                   float64       \n 71   ef_legal_courts                     float64       \n 72   ef_legal_protection                 float64       \n 73   ef_legal_military                   float64       \n 74   ef_legal_integrity                  float64       \n 75   ef_legal_enforcement                float64       \n 76   ef_legal_restrictions               float64       \n 77   ef_legal_police                     float64       \n 78   ef_legal_crime                      float64       \n 79   ef_legal_gender                     float64       \n 80   ef_legal                            float64       \n 81   ef_money_growth                     float64       \n 82   ef_money_sd                         float64       \n 83   ef_money_inflation                  float64       \n 84   ef_money_currency                   float64       \n 85   ef_money                            float64       \n 86   ef_trade_tariffs_revenue            float64       \n 87   ef_trade_tariffs_mean               float64       \n 88   ef_trade_tariffs_sd                 float64       \n 89   ef_trade_tariffs                    float64       \n 90   ef_trade_regulatory_nontariff       float64       \n 91   ef_trade_regulatory_compliance      float64       \n 92   ef_trade_regulatory                 float64       \n 93   ef_trade_black                      float64       \n 94   ef_trade_movement_foreign           float64       \n 95   ef_trade_movement_capital           float64       \n 96   ef_trade_movement_visit             float64       \n 97   ef_trade_movement                   float64       \n 98   ef_trade                            float64       \n 99   ef_regulation_credit_ownership      float64       \n 100  ef_regulation_credit_private        float64       \n 101  ef_regulation_credit_interest       float64       \n 102  ef_regulation_credit                float64       \n 103  ef_regulation_labor_minwage         float64       \n 104  ef_regulation_labor_firing          float64       \n 105  ef_regulation_labor_bargain         float64       \n 106  ef_regulation_labor_hours           float64       \n 107  ef_regulation_labor_dismissal       float64       \n 108  ef_regulation_labor_conscription    float64       \n 109  ef_regulation_labor                 float64       \n 110  ef_regulation_business_adm          float64       \n 111  ef_regulation_business_bureaucracy  float64       \n 112  ef_regulation_business_start        float64       \n 113  ef_regulation_business_bribes       float64       \n 114  ef_regulation_business_licensing    float64       \n 115  ef_regulation_business_compliance   float64       \n 116  ef_regulation_business              float64       \n 117  ef_regulation                       float64       \n 118  ef_score                            float64       \n 119  ef_rank                             float64       \n 120  hf_score                            float64       \n 121  hf_rank                             float64       \n 122  hf_quartile                         float64       \n 123  mean_hf_score                       float64       \n 124  median_hf_score                     float64       \n 125  mode_hf_score                       float64       \ndtypes: datetime64[ns](1), float64(122), object(3)\nmemory usage: 1.4+ MB\nNone\n```\n:::\n:::\n\n\n## Converting `ISO_code`, `countries`, and `region` to Categorical {.smaller}\n\n::: {#360a9669 .cell execution_count=16}\n``` {.python .cell-code}\nhfi_copy['ISO_code'] = hfi_copy['ISO_code'].astype('category')\nhfi_copy['countries'] = hfi_copy['countries'].astype('category')\nhfi_copy['region'] = hfi_copy['region'].astype('category')\nprint(hfi_copy.info(verbose=True))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1458 entries, 0 to 1457\nData columns (total 126 columns):\n #    Column                              Dtype         \n---   ------                              -----         \n 0    year                                datetime64[ns]\n 1    ISO_code                            category      \n 2    countries                           category      \n 3    region                              category      \n 4    pf_rol_procedural                   float64       \n 5    pf_rol_civil                        float64       \n 6    pf_rol_criminal                     float64       \n 7    pf_rol                              float64       \n 8    pf_ss_homicide                      float64       \n 9    pf_ss_disappearances_disap          float64       \n 10   pf_ss_disappearances_violent        float64       \n 11   pf_ss_disappearances_organized      float64       \n 12   pf_ss_disappearances_fatalities     float64       \n 13   pf_ss_disappearances_injuries       float64       \n 14   pf_ss_disappearances                float64       \n 15   pf_ss_women_fgm                     float64       \n 16   pf_ss_women_missing                 float64       \n 17   pf_ss_women_inheritance_widows      float64       \n 18   pf_ss_women_inheritance_daughters   float64       \n 19   pf_ss_women_inheritance             float64       \n 20   pf_ss_women                         float64       \n 21   pf_ss                               float64       \n 22   pf_movement_domestic                float64       \n 23   pf_movement_foreign                 float64       \n 24   pf_movement_women                   float64       \n 25   pf_movement                         float64       \n 26   pf_religion_estop_establish         float64       \n 27   pf_religion_estop_operate           float64       \n 28   pf_religion_estop                   float64       \n 29   pf_religion_harassment              float64       \n 30   pf_religion_restrictions            float64       \n 31   pf_religion                         float64       \n 32   pf_association_association          float64       \n 33   pf_association_assembly             float64       \n 34   pf_association_political_establish  float64       \n 35   pf_association_political_operate    float64       \n 36   pf_association_political            float64       \n 37   pf_association_prof_establish       float64       \n 38   pf_association_prof_operate         float64       \n 39   pf_association_prof                 float64       \n 40   pf_association_sport_establish      float64       \n 41   pf_association_sport_operate        float64       \n 42   pf_association_sport                float64       \n 43   pf_association                      float64       \n 44   pf_expression_killed                float64       \n 45   pf_expression_jailed                float64       \n 46   pf_expression_influence             float64       \n 47   pf_expression_control               float64       \n 48   pf_expression_cable                 float64       \n 49   pf_expression_newspapers            float64       \n 50   pf_expression_internet              float64       \n 51   pf_expression                       float64       \n 52   pf_identity_legal                   float64       \n 53   pf_identity_parental_marriage       float64       \n 54   pf_identity_parental_divorce        float64       \n 55   pf_identity_parental                float64       \n 56   pf_identity_sex_male                float64       \n 57   pf_identity_sex_female              float64       \n 58   pf_identity_sex                     float64       \n 59   pf_identity_divorce                 float64       \n 60   pf_identity                         float64       \n 61   pf_score                            float64       \n 62   pf_rank                             float64       \n 63   ef_government_consumption           float64       \n 64   ef_government_transfers             float64       \n 65   ef_government_enterprises           float64       \n 66   ef_government_tax_income            float64       \n 67   ef_government_tax_payroll           float64       \n 68   ef_government_tax                   float64       \n 69   ef_government                       float64       \n 70   ef_legal_judicial                   float64       \n 71   ef_legal_courts                     float64       \n 72   ef_legal_protection                 float64       \n 73   ef_legal_military                   float64       \n 74   ef_legal_integrity                  float64       \n 75   ef_legal_enforcement                float64       \n 76   ef_legal_restrictions               float64       \n 77   ef_legal_police                     float64       \n 78   ef_legal_crime                      float64       \n 79   ef_legal_gender                     float64       \n 80   ef_legal                            float64       \n 81   ef_money_growth                     float64       \n 82   ef_money_sd                         float64       \n 83   ef_money_inflation                  float64       \n 84   ef_money_currency                   float64       \n 85   ef_money                            float64       \n 86   ef_trade_tariffs_revenue            float64       \n 87   ef_trade_tariffs_mean               float64       \n 88   ef_trade_tariffs_sd                 float64       \n 89   ef_trade_tariffs                    float64       \n 90   ef_trade_regulatory_nontariff       float64       \n 91   ef_trade_regulatory_compliance      float64       \n 92   ef_trade_regulatory                 float64       \n 93   ef_trade_black                      float64       \n 94   ef_trade_movement_foreign           float64       \n 95   ef_trade_movement_capital           float64       \n 96   ef_trade_movement_visit             float64       \n 97   ef_trade_movement                   float64       \n 98   ef_trade                            float64       \n 99   ef_regulation_credit_ownership      float64       \n 100  ef_regulation_credit_private        float64       \n 101  ef_regulation_credit_interest       float64       \n 102  ef_regulation_credit                float64       \n 103  ef_regulation_labor_minwage         float64       \n 104  ef_regulation_labor_firing          float64       \n 105  ef_regulation_labor_bargain         float64       \n 106  ef_regulation_labor_hours           float64       \n 107  ef_regulation_labor_dismissal       float64       \n 108  ef_regulation_labor_conscription    float64       \n 109  ef_regulation_labor                 float64       \n 110  ef_regulation_business_adm          float64       \n 111  ef_regulation_business_bureaucracy  float64       \n 112  ef_regulation_business_start        float64       \n 113  ef_regulation_business_bribes       float64       \n 114  ef_regulation_business_licensing    float64       \n 115  ef_regulation_business_compliance   float64       \n 116  ef_regulation_business              float64       \n 117  ef_regulation                       float64       \n 118  ef_score                            float64       \n 119  ef_rank                             float64       \n 120  hf_score                            float64       \n 121  hf_rank                             float64       \n 122  hf_quartile                         float64       \n 123  mean_hf_score                       float64       \n 124  median_hf_score                     float64       \n 125  mode_hf_score                       float64       \ndtypes: category(3), datetime64[ns](1), float64(122)\nmemory usage: 1.4 MB\nNone\n```\n:::\n:::\n\n\n## Creating a `boolean` column from `hf_score` {.smaller}\n\nLet's say we want to know whether countries are \"free\" or not.\n\n::: {#6ab72d22 .cell execution_count=17}\n``` {.python .cell-code}\nthreshold = 8.5\nhfi_copy['hf_score_above_threshold'] = hfi_copy['hf_score'] > threshold\n```\n:::\n\n\n# Filtering + subsetting\n\n## Filter out `True` values\n\n::: {#704b6723 .cell execution_count=18}\n``` {.python .cell-code}\nfiltered_hfi_copy = hfi_copy[hfi_copy['hf_score_above_threshold'] == True][['hf_score_above_threshold', 'countries']]\n\nprint(filtered_hfi_copy[['hf_score_above_threshold', 'countries']])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      hf_score_above_threshold       countries\n5                         True       Australia\n27                        True          Canada\n41                        True         Denmark\n63                        True       Hong Kong\n70                        True         Ireland\n...                        ...             ...\n1359                      True       Hong Kong\n1403                      True     New Zealand\n1407                      True          Norway\n1436                      True     Switzerland\n1450                      True  United Kingdom\n\n[83 rows x 2 columns]\n```\n:::\n:::\n\n\n::: fragment\n> That's a lot of data...\n> ðŸ¤”\n:::\n\n## Filter out `True` values for newest `year`\n\n::: {#be9882ca .cell execution_count=19}\n``` {.python .cell-code}\nnewest_year = hfi_copy['year'].max()\nfiltered_hfi_copy = hfi_copy[(hfi_copy['year'] == newest_year) & (hfi_copy['hf_score_above_threshold'] == True)]\n\nresult = filtered_hfi_copy[['hf_score_above_threshold', 'countries']]\n\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     hf_score_above_threshold    countries\n5                        True    Australia\n27                       True       Canada\n41                       True      Denmark\n63                       True    Hong Kong\n70                       True      Ireland\n106                      True  Netherlands\n107                      True  New Zealand\n140                      True  Switzerland\n```\n:::\n:::\n\n\n## Filtering categories\n\n::: {#64dee4fd .cell execution_count=20}\n``` {.python .cell-code code-line-numbers=\"|1-3|4\"}\noptions = ['United States', 'India', 'Canada', 'China']\nfiltered_hfi = hfi[hfi['countries'].isin(options)]\nfiltered_hfi['countries'] = filtered_hfi['countries'].cat.remove_unused_categories()\nunique_countries = filtered_hfi['countries'].unique()\nprint(unique_countries)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Canada', 'China', 'India', 'United States']\nCategories (4, object): ['Canada', 'China', 'India', 'United States']\n```\n:::\n:::\n\n\n# Transformations\n\n## Normalizing {.smaller}\n\n::: panel-tabset\n## Standard deviation\n\n::: {#2e17ec3c .cell execution_count=21}\n\n::: {.cell-output .cell-output-stdout}\n```\nMean: 5\nStandard Deviation: 2\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-22-output-2.png){width=832 height=442}\n:::\n:::\n\n\n## Z-score\n\n::: {#7d4bdd9b .cell execution_count=22}\n``` {.python .cell-code}\nhfi_copy = hfi.copy()\n\nscaler = StandardScaler()\nhfi_copy[['ef_score_scale', 'pf_score_scale']] = scaler.fit_transform(hfi_copy[['ef_score', 'pf_score']])\n\nhfi_copy[['ef_score_scale', 'pf_score_scale']].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ef_score_scale</th>\n      <th>pf_score_scale</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.378000e+03</td>\n      <td>1.378000e+03</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>4.524683e-16</td>\n      <td>2.062533e-17</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.000363e+00</td>\n      <td>1.000363e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-4.421711e+00</td>\n      <td>-3.663087e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-6.063870e-01</td>\n      <td>-7.303950e-01</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.295064e-01</td>\n      <td>-8.926277e-03</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.068997e-01</td>\n      <td>9.081441e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2.722116e+00</td>\n      <td>1.722056e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Min-max\n\n::: {#ef285526 .cell execution_count=23}\n``` {.python .cell-code}\nmin_max_scaler = MinMaxScaler()\nhfi_copy[['ef_score_minmax', 'pf_score_minmax']] = min_max_scaler.fit_transform(hfi_copy[['ef_score', 'pf_score']])\n\nhfi_copy[['ef_score_minmax', 'pf_score_minmax']].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ef_score_minmax</th>\n      <th>pf_score_minmax</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.618956</td>\n      <td>0.680221</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.140032</td>\n      <td>0.185764</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.534073</td>\n      <td>0.544589</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.637084</td>\n      <td>0.678563</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.717908</td>\n      <td>0.848860</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Maximum absolute\n\n::: {#bda638d5 .cell execution_count=24}\n``` {.python .cell-code}\nmax_abs_scaler = MaxAbsScaler()\nhfi_copy[['ef_score_maxabs', 'pf_score_maxabs']] = max_abs_scaler.fit_transform(hfi_copy[['ef_score', 'pf_score']])\n\nhfi_copy[['ef_score_maxabs', 'pf_score_maxabs']].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ef_score_maxabs</th>\n      <th>pf_score_maxabs</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1378.000000</td>\n      <td>1378.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.738369</td>\n      <td>0.752630</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.096148</td>\n      <td>0.143700</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.313384</td>\n      <td>0.226434</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.680087</td>\n      <td>0.647710</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.750816</td>\n      <td>0.751348</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.806311</td>\n      <td>0.883083</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n:::\n\n## Visual comparison {.smaller}\n\n::: {#4cc15c24 .cell execution_count=25}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-26-output-1.png){width=1321 height=646}\n:::\n:::\n\n\n## Pros + cons (`StandardScaler`) {.smaller}\n\n**Pros:**\n\n::: incremental\n-   **Normalization of Variance**: Centers data around zero with a standard deviation of one, suitable for algorithms assuming normally distributed data (e.g., linear regression, logistic regression, neural networks).\n\n-   **Preserves Relationships**: Maintains ratios and differences between data points.\n:::\n\n**Cons:**\n\n::: incremental\n-   **Sensitive to Outliers**: Outliers can distort scaled values.\n\n-   **Assumes Normality**: Assumes data follows a Gaussian distribution.\n:::\n\n## Pros + cons (`MaxAbsScaler`) {.smaller}\n\n**Pros:**\n\n::: incremental\n-   **Outlier Resistant**: Less sensitive to outliers, scales based on the absolute maximum value.\n\n-   **Preserves Sparsity**: Does not center data, preserving the sparsity pattern.\n:::\n\n**Cons:**\n\n::: incremental\n-   **Scale Limitation**: Scales to the range \\[-1, 1\\], which may not suit all algorithms.\n\n-   **Not Zero-Centered**: May be a limitation for algorithms preferring zero-centered data.\n:::\n\n## Pros + cons (`MinMaxScaler`) {.smaller}\n\n**Pros:**\n\n::: incremental\n-   **Fixed Range**: Scales data to a fixed range (usually \\[0, 1\\]), beneficial for algorithms sensitive to feature scales (e.g., neural networks, k-nearest neighbors).\n\n-   **Preserves Relationships**: Maintains relationships between data points.\n:::\n\n**Cons:**\n\n::: incremental\n-   **Sensitive to Outliers**: Outliers can skew scaled values.\n\n-   **Range Dependence**: Scaling depends on the min and max values in the training data, which may not generalize well to new data.\n:::\n\n# Normality\n\n## Normality test: Q-Q plot {.smaller}\n\n::: panel-tabset\n## Q-Q Plot\n\n::: {#21e337bd .cell execution_count=26}\n``` {.python .cell-code code-fold=\"true\"}\nhfi_clean = hfi_copy.dropna(subset = ['pf_score'])\n\nsns.set_style(\"white\")\n\nfig, (ax1, ax2) = plt.subplots(ncols = 2, nrows = 1)\n\nsns.kdeplot(data = hfi_clean, x = \"hf_score\", linewidth = 5, ax = ax1)\nax1.set_title('Human Freedom Score')\n\nsm.qqplot(hfi_clean['hf_score'], line = 's', ax = ax2, dist = stats.norm, fit = True)\nax2.set_title('Human Freedom Score Q-Q plot')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-27-output-1.png){width=937 height=454}\n:::\n:::\n\n\n## Issues\n\n**There were some issues in our plots**:\n\n::: incremental\n-   **Left Tail**: Points deviate downwards from the line, indicating more extreme low values than a normal distribution (**negative skewness**).\n\n-   **Central Section**: Points align closely with the line, suggesting the central data is *similar to a normal distribution*.\n\n-   **Right Tail**: Points curve upwards, showing potential for **extreme high values (positive skewness)**.\n:::\n:::\n\n## Correcting skew {.smaller}\n\n::: fragment\n[Square-root transformation](https://en.wikipedia.org/wiki/Square_root).\n$\\sqrt x$ Used for **moderately** right-skew **(positive skew)**\n\n::: incremental\n-   Cannot handle negative values (but can handle zeros)\n:::\n:::\n\n::: fragment\n[Log transformation](https://en.wikipedia.org/wiki/Logarithm).\n$log(x + 1)$ Used for **substantial** right-skew **(positive skew)**\n\n::: incremental\n-   Cannot handle negative or zero values\n:::\n:::\n\n::: fragment\n[Squared transformation](https://en.wikipedia.org/wiki/Quadratic_function).\n$x^2$ Used for **moderately** left-skew **(negative skew)**\n\n::: incremental\n-   Effective when lower values are densely packed together\n:::\n:::\n\n## Comparing transformations {.smaller}\n\n::: panel-tabset\n## Original\n\n::: {#48b5048d .cell execution_count=27}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-28-output-1.png){width=937 height=454}\n:::\n:::\n\n\n::: fragment\n**Moderate negative skew, no zeros or negative values**\n:::\n\n## Square-root\n\n::: {#01514c0a .cell execution_count=28}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"1-13|1|2,7,10\"}\nhfi_clean['hf_score_sqrt'] = np.sqrt(hfi_clean['hf_score'])\n\ncol = hfi_clean['hf_score_sqrt']\n\nfig, (ax1, ax2) = plt.subplots(ncols = 2, nrows = 1)\n\nsns.kdeplot(col, linewidth = 5, ax = ax1)\nax1.set_title('Square-root Density plot')    \n\nsm.qqplot(col, line = 's', ax = ax2)\nax2.set_title('Square-root Q-Q plot')    \nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-29-output-1.png){width=937 height=454}\n:::\n:::\n\n\n## Log\n\n::: {#1c037534 .cell execution_count=29}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"1-13|1\"}\nhfi_clean['hf_score_log'] = np.log(hfi_clean['hf_score'] + 1)\n\ncol = hfi_clean['hf_score_log']\n\nfig, (ax1, ax2) = plt.subplots(ncols = 2, nrows = 1)\n\nsns.kdeplot(col, linewidth = 5, ax = ax1)\nax1.set_title('Log Density plot')    \n\nsm.qqplot(col, line = 's', ax = ax2)\nax2.set_title('Log Q-Q plot')    \nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-30-output-1.png){width=937 height=454}\n:::\n:::\n\n\n## Squared\n\n::: {#684f585e .cell execution_count=30}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"1-13|1\"}\nhfi_clean['hf_score_square'] = pow(hfi_clean.hf_score, 2)\n\ncol = hfi_clean['hf_score_square']\n\nfig, (ax1, ax2) = plt.subplots(ncols = 2, nrows = 1)\n\nsns.kdeplot(col, linewidth = 5, ax = ax1)\nax1.set_title('Squared Density plot')    \n\nsm.qqplot(col, line = 's', ax = ax2)\nax2.set_title('Squared Q-Q plot')    \nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-31-output-1.png){width=937 height=454}\n:::\n:::\n\n\n:::\n\n## What did we learn?\n\n::: incremental\n-   Negative skew excluded all but **Squared** transformation\n\n-   ...\n    thus, **Squared** transformation was the best\n\n-   The data is **bimodal**, so no transformation is perfect\n:::\n\n## Answering our question {.smaller}\n\nWhat trends are there within **human freedom indices** in different regions?\n\n::: {#3d519806 .cell execution_count=31}\n\n::: {.cell-output .cell-output-display}\n![](06-preprocessing_files/figure-revealjs/cell-32-output-1.png){width=841 height=439}\n:::\n:::\n\n\n:::fragment\nProbably...\n:::\n\n",
    "supporting": [
      "06-preprocessing_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}