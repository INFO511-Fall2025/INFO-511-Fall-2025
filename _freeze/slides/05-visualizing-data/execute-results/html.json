{
  "hash": "d9c48edce73a585738053187aa03bd26",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Visualizing various types of data\nsubtitle: Lecture 5\nformat:\n  revealjs: default\nexecute:\n  warning: false\n  error: false\n---\n\n## Setup\n\n::: {#c8ab255e .cell execution_count=1}\n``` {.python .cell-code}\n# Import necessary libraries\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom palmerpenguins import load_penguins\n\n# Load the penguins dataset\npenguins = load_penguins()\n\n# Set theme\nsns.set_theme(style=\"whitegrid\")\n```\n:::\n\n\n# Data Visualization\n\n## Examining data visualization {.smaller}\n\n::: columns\n::: {.column width=\"60%\"}\nDiscuss the following for the visualization in the #lecture-discussions Slack Channel.\n:::\n\n::: {.column width=\"40%\"}\n![Source: [Twitter](https://twitter.com/reina_sabah/status/1291509085855260672)](images/female-heights.png){fig-align=\"center\"}\n:::\n:::\n\n## Violin plots\n\n::: {#cell-penguins-violin-1 .cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"|1|2|3\"}\nplt.figure(figsize=(8, 6))\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins)\nplt.title('Violin Plot of Body Mass by Species')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-violin-1-output-1.png){#penguins-violin-1 width=680 height=529}\n:::\n:::\n\n\n## Multiple geoms\n\n::: {#cell-penguins-violin-2 .cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"3\"}\nplt.figure(figsize=(8, 6))\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins)\nsns.stripplot(x=\"species\", y=\"body_mass_g\", data=penguins, jitter=False, color='black')\nplt.title('Violin Plot with Points of Body Mass by Species')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-violin-2-output-1.png){#penguins-violin-2 width=680 height=529}\n:::\n:::\n\n\n## Multiple geoms\n\n::: {#cell-penguins-violin-3 .cell execution_count=4}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"3\"}\nplt.figure(figsize=(8, 6))\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins)\nsns.stripplot(x=\"species\", y=\"body_mass_g\", data=penguins, jitter=True, color='black')\nplt.title('Violin Plot with Points of Body Mass by Species')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-violin-3-output-1.png){#penguins-violin-3 width=680 height=529}\n:::\n:::\n\n\n## Multiple geoms + aesthetics\n\n::: {#cell-penguins-violin-4 .cell execution_count=5}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"3\"}\nplt.figure(figsize=(8, 6))\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins)\nsns.stripplot(x=\"species\", y=\"body_mass_g\", data=penguins, jitter=True, hue='species')\nplt.title('Violin Plot with Jittered Points and Color by Species')\nplt.legend(title='Species')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-violin-4-output-1.png){#penguins-violin-4 width=680 height=529}\n:::\n:::\n\n\n## Multiple geoms + aesthetics\n\n::: {#cell-penguins-violin-5 .cell execution_count=6}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"6\"}\nplt.figure(figsize=(8, 6))\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins)\nsns.stripplot(x=\"species\", y=\"body_mass_g\", data=penguins, jitter=True, hue='species')\nplt.title('Violin Plot with Jittered Points, Color by Species, and No Legend')\nplt.legend(title='Species').remove()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-violin-5-output-1.png){#penguins-violin-5 width=680 height=529}\n:::\n:::\n\n\n## Multiple geoms + aesthetics\n\n::: {#cell-penguins-violin-6 .cell execution_count=7}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"3\"}\nplt.figure(figsize=(8, 6))\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins, palette='colorblind')\nsns.stripplot(x=\"species\", y=\"body_mass_g\", data=penguins, jitter=True, hue='species', palette='colorblind')\nplt.title('Violin Plot with Jittered Points, Color by Species, No Legend, and Colorblind Palette')\nplt.legend(title='Species').remove()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-violin-6-output-1.png){#penguins-violin-6 width=680 height=529}\n:::\n:::\n\n\n# Visualizing various types of data\n\n## The way data is displayed matters {.smaller}\n\n::: poll\nWhat do these three plots show?\n:::\n\n![](images/bar-plot-meme.png){fig-align=\"center\"}\n\n::: aside\nSource: [#barbarplots](https://cogtales.wordpress.com/2016/06/06/congratulations-barbarplots/)\n:::\n\n## Visualizing `penguins` {.smaller}\n\n::: columns\n::: {.column width=\"70%\"}\n::: {style=\"font-size: 20px;\"}\n\n::: {#e4df740e .cell execution_count=8}\n``` {.python .cell-code}\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom palmerpenguins import load_penguins\n\npenguins = load_penguins()\n\npenguins.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>species</th>\n      <th>island</th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>sex</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>39.1</td>\n      <td>18.7</td>\n      <td>181.0</td>\n      <td>3750.0</td>\n      <td>male</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>39.5</td>\n      <td>17.4</td>\n      <td>186.0</td>\n      <td>3800.0</td>\n      <td>female</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>40.3</td>\n      <td>18.0</td>\n      <td>195.0</td>\n      <td>3250.0</td>\n      <td>female</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>36.7</td>\n      <td>19.3</td>\n      <td>193.0</td>\n      <td>3450.0</td>\n      <td>female</td>\n      <td>2007</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n:::\n:::\n\n::: {.column width=\"30%\"}\n![](images/penguins.png){fig-align=\"center\"}\n:::\n:::\n\n::: aside\nArtwork by \\@allison_horst.\n:::\n\n# Univariate analysis\n\n## Univariate analysis\n\nAnalyzing a single variable:\n\n-   Numerical: histogram, box plot, density plot, etc.\n\n-   Categorical: bar plot, pie chart, etc.\n\n## Histogram\n\n::: {#cell-penguins-histogram .cell execution_count=9}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"2\"}\nplt.figure(figsize=(8, 6))\nsns.histplot(penguins['body_mass_g'], bins=30)\nplt.title('Histogram of Penguin Body Mass')\nplt.xlabel('Body Mass (g)')\nplt.ylabel('Count')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-histogram-output-1.png){#penguins-histogram width=663 height=529}\n:::\n:::\n\n\n## Boxplot\n\n::: {#cell-penguins-boxplot .cell execution_count=10}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"2\"}\nplt.figure(figsize=(8, 6))\nsns.boxplot(y=penguins['body_mass_g'])\nplt.title('Boxplot of Penguin Body Mass')\nplt.ylabel('Body Mass (g)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-boxplot-output-1.png){#penguins-boxplot width=680 height=482}\n:::\n:::\n\n\n## Density plot\n\n::: {#cell-penguins-density .cell execution_count=11}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"2\"}\nplt.figure(figsize=(10, 6))\nsns.kdeplot(penguins['body_mass_g'], fill=True)\nplt.title('Density Plot of Penguin Body Mass')\nplt.xlabel('Body Mass (g)')\nplt.ylabel('Density')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-density-output-1.png){#penguins-density width=841 height=529}\n:::\n:::\n\n\n# Bivariate analysis\n\n## Bivariate analysis\n\nAnalyzing the relationship between two variables:\n\n-   Numerical + numerical: scatterplot\n\n-   Numerical + categorical: side-by-side box plots, violin plots, etc.\n\n-   Categorical + categorical: stacked bar plots\n\n-   Using an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot\n\n## Side-by-side box plots\n\n::: {#cell-penguins-boxplot-2 .cell execution_count=12}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"2\"}\nplt.figure(figsize=(8, 6))\nsns.boxplot(x=\"species\", y=\"body_mass_g\", data=penguins)\nplt.title('Side-by-side Box Plots of Body Mass by Species')\nplt.xlabel('Species')\nplt.ylabel('Body Mass (g)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-boxplot-2-output-1.png){#penguins-boxplot-2 width=680 height=529}\n:::\n:::\n\n\n## Density plots\n\n::: {#cell-penguins-density-2 .cell execution_count=13}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"2\"}\nplt.figure(figsize=(8, 6))\nsns.kdeplot(data=penguins, x=\"body_mass_g\", hue=\"species\", fill=True)\nplt.title('Density Plot of Body Mass by Species')\nplt.xlabel('Body Mass (g)')\nplt.ylabel('Density')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/penguins-density-2-output-1.png){#penguins-density-2 width=704 height=529}\n:::\n:::\n\n\n# Multivariate analysis\n\n## Bechdel Test {.smaller}\n\n::: columns\n::: {.column width=\"70%\"}\n> The **Bechdel test** also known as the **Bechdel-Wallace test**, is a measure of the representation of [women](https://en.wikipedia.org/wiki/Women_in_film \"Women in film\") in [film](https://en.wikipedia.org/wiki/Film_industry \"Film industry\") and other fiction.\n> The test asks whether a work features at least two female characters who have a conversation about something other than a man.\n> Some versions of the test also require that those two female characters have names.\n:::\n\n::: {.column width=\"30%\"}\n![](images/Alison-Bechdel.jpg){fig-align=\"center\"}\n:::\n:::\n\n## Load Bechdel test data\n\nLoad the Bechdel test data with `pd.read_csv()`\n\n::: {#ea55c702 .cell execution_count=14}\n``` {.python .cell-code}\nbechdel = pd.read_csv(\"data/bechdel.csv\")\n```\n:::\n\n\n`list()` the `.columns` names of the `bechdel` data:\n\n::: {#892c7595 .cell execution_count=15}\n``` {.python .cell-code}\nlist(bechdel.columns)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n['title', 'year', 'gross_2013', 'budget_2013', 'roi', 'binary', 'clean_test']\n```\n:::\n:::\n\n\n## ROI by test result {.smaller}\n\n> What about this plot makes it difficult to evaluate how ROI varies by Bechdel test result?\n\n::: {#cell-bechdel-1 .cell execution_count=16}\n``` {.python .cell-code code-fold=\"true\"}\nplt.figure(figsize=(8, 4))\nsns.stripplot(x='roi', y='clean_test', hue='binary', data=bechdel)\nplt.title('ROI by Bechdel Test Result')\nplt.xlabel('ROI')\nplt.ylabel('Bechdel Test Result')\nplt.legend(title='Binary')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/bechdel-1-output-1.png){#bechdel-1 width=719 height=381}\n:::\n:::\n\n\n## Movies with high ROI {.smaller}\n\n> What are the movies with highest ROI?\n\n::: {#cbcea07c .cell execution_count=17}\n``` {.python .cell-code}\nhigh_roi_movies = bechdel[bechdel['roi'] > 400][['title', 'roi', 'budget_2013', 'gross_2013', 'year', 'clean_test']]\nprint(high_roi_movies)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        title         roi  budget_2013   gross_2013  year  \\\n703       Paranormal Activity  671.336857       505595  339424558.0  2007   \n1319  The Blair Witch Project  648.065333       839077  543776715.0  1999   \n1575              El Mariachi  583.285665        11622    6778946.0  1992   \n\n     clean_test  \n703     dubious  \n1319         ok  \n1575    nowomen  \n```\n:::\n:::\n\n\n## ROI by test result {.smaller}\n\n> **Zoom in:** What about this plot makes it difficult to evaluate how ROI varies by Bechdel test result?\n\n::: {#cell-bechdel-2 .cell execution_count=18}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"|3\"}\nplt.figure(figsize=(8, 4))\nsns.boxplot(x='roi', y='clean_test', hue='binary', data=bechdel)\nplt.xlim(0, 15)\nplt.title('Zoomed in ROI by Bechdel Test Result')\nplt.xlabel('ROI')\nplt.ylabel('Bechdel Test Result')\nplt.legend(title='Binary')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/bechdel-2-output-1.png){#bechdel-2 width=711 height=381}\n:::\n:::\n\n\n## Sneak preview...\n\n<br> <br>\n\n::: hand\nto next week's data wrangling pipelines...\n:::\n\n## Median ROI\n\n::: {#47fee2b9 .cell execution_count=19}\n``` {.python .cell-code code-line-numbers=\"1\"}\nmedian_roi = bechdel['roi'].median()\nprint(f\"Median ROI: {median_roi}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMedian ROI: 3.9051317558839456\n```\n:::\n:::\n\n\n## Median ROI by test result\n\n::: {#e3cb508e .cell execution_count=20}\n``` {.python .cell-code code-line-numbers=\"1\"}\nmedian_roi_by_test = bechdel.groupby('clean_test')['roi'].median().reset_index()\nprint(median_roi_by_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  clean_test       roi\n0    dubious  3.795816\n1        men  3.964457\n2     notalk  3.688260\n3    nowomen  3.265901\n4         ok  4.211049\n```\n:::\n:::\n\n\n## ROI by test result with median line {.smaller}\n\n> What does this plot say about return-on-investment on movies that pass the Bechdel test?\n\n::: {#cell-bechdel-3 .cell execution_count=21}\n``` {.python .cell-code code-fold=\"true\"}\nplt.figure(figsize=(8, 4))\nsns.boxplot(x='roi', y='clean_test', hue='binary', data=bechdel)\nplt.axvline(x=4.21, color='red', linestyle='--')\nplt.xlim(0, 15)\nplt.title('ROI by Bechdel Test Result with Median Line')\nplt.xlabel('ROI')\nplt.ylabel('Bechdel Test Result')\nplt.legend(title='Binary')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](05-visualizing-data_files/figure-revealjs/bechdel-3-output-1.png){#bechdel-3 width=711 height=381}\n:::\n:::\n\n\n",
    "supporting": [
      "05-visualizing-data_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}